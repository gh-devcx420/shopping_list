import 'package:flutter/material.dart';
import 'package:shopping_list/models/theme_model.dart';

enum AppColors {
  indigoSanMarino,
  verdunGreen,
}

Map<AppColors, String> themeNames = {};

Map<AppColors, ThemeModel> lightColorSchemes = {
  AppColors.indigoSanMarino: ThemeModel(
    previewColor: Colors.indigo,
    themeName: 'Indigo San Marino',
    themeColorScheme: lightColorSchemeIndigoSanMarino,
  ),
  AppColors.verdunGreen: ThemeModel(
    previewColor: Colors.green,
    themeName: 'Verdun Green',
    themeColorScheme: lightColorSchemeVerdunGreen,
  ),
};

Map<AppColors, ThemeModel> darkColorSchemes = {
  AppColors.indigoSanMarino: ThemeModel(
    previewColor: Colors.indigo,
    themeName: 'Indigo San Marino',
    themeColorScheme: darkColorSchemeIndigoSanMarino,
  ),
  AppColors.verdunGreen: ThemeModel(
    previewColor: Colors.green,
    themeName: 'Verdun Green',
    themeColorScheme: darkColorSchemeVerdunGreen,
  ),
};

const ColorScheme lightColorSchemeIndigoSanMarino = ColorScheme(
  brightness: Brightness.light,
  primary: Color(0xFF4355B9),
  onPrimary: Color(0xFFFFFFFF),
  primaryContainer: Color(0xFFDEE0FF),
  onPrimaryContainer: Color(0xFF000000),
  primaryFixed: Color(0xFFD6DAF0),
  primaryFixedDim: Color(0xFFACB3E1),
  onPrimaryFixed: Color(0xFF1D2450),
  onPrimaryFixedVariant: Color(0xFF222B5D),
  secondary: Color(0xFF3C64AE),
  onSecondary: Color(0xFFFFFFFF),
  secondaryContainer: Color(0xFFD8E2FF),
  onSecondaryContainer: Color(0xFF000000),
  secondaryFixed: Color(0xFFD2DDF0),
  secondaryFixedDim: Color(0xFFA9BCDF),
  onSecondaryFixed: Color(0xFF192947),
  onSecondaryFixedVariant: Color(0xFF1D3055),
  tertiary: Color(0xFF537577),
  onTertiary: Color(0xFFFFFFFF),
  tertiaryContainer: Color(0xFFA9D4D6),
  onTertiaryContainer: Color(0xFF000000),
  tertiaryFixed: Color(0xFFD8E2E3),
  tertiaryFixedDim: Color(0xFFB6C6C7),
  onTertiaryFixed: Color(0xFF1E2B2B),
  onTertiaryFixedVariant: Color(0xFF263536),
  error: Color(0xFFBA1A1A),
  onError: Color(0xFFFFFFFF),
  errorContainer: Color(0xFFFFDAD6),
  onErrorContainer: Color(0xFF000000),
  surface: Color(0xFFFCFCFC),
  onSurface: Color(0xFF111111),
  surfaceDim: Color(0xFFE0E0E0),
  surfaceBright: Color(0xFFFDFDFD),
  surfaceContainerLowest: Color(0xFFFFFFFF),
  surfaceContainerLow: Color(0xFFF8F8F8),
  surfaceContainer: Color(0xFFF3F3F3),
  surfaceContainerHigh: Color(0xFFEDEDED),
  surfaceContainerHighest: Color(0xFFE7E7E7),
  onSurfaceVariant: Color(0xFF393939),
  outline: Color(0xFF919191),
  outlineVariant: Color(0xFFD1D1D1),
  shadow: Color(0xFF000000),
  scrim: Color(0xFF000000),
  inverseSurface: Color(0xFF2A2A2A),
  onInverseSurface: Color(0xFFF1F1F1),
  inversePrimary: Color(0xFFDCE3FF),
  surfaceTint: Color(0xFF4355B9),
);
const ColorScheme lightColorSchemeVerdunGreen = ColorScheme(
  brightness: Brightness.light,
  primary: Color(0xFF556500),
  onPrimary: Color(0xFFFFFFFF),
  primaryContainer: Color(0xFFDAEB8F),
  onPrimaryContainer: Color(0xFF000000),
  primaryFixed: Color(0xFFE1E7BF),
  primaryFixedDim: Color(0xFFC5D18C),
  onPrimaryFixed: Color(0xFF020300),
  onPrimaryFixedVariant: Color(0xFF485603),
  secondary: Color(0xFF8C7519),
  onSecondary: Color(0xFFFFFFFF),
  secondaryContainer: Color(0xFFFFF0C7),
  onSecondaryContainer: Color(0xFF000000),
  secondaryFixed: Color(0xFFECE5C8),
  secondaryFixedDim: Color(0xFFD8CB99),
  onSecondaryFixed: Color(0xFF292207),
  onSecondaryFixedVariant: Color(0xFF372E0A),
  tertiary: Color(0xFF00687B),
  onTertiary: Color(0xFFFFFFFF),
  tertiaryContainer: Color(0xFFAEECFF),
  onTertiaryContainer: Color(0xFF000000),
  tertiaryFixed: Color(0xFFBFE5EC),
  tertiaryFixedDim: Color(0xFF8CCCD8),
  onTertiaryFixed: Color(0xFF000F12),
  onTertiaryFixedVariant: Color(0xFF001F24),
  error: Color(0xFFBA1A1A),
  onError: Color(0xFFFFFFFF),
  errorContainer: Color(0xFFFFDAD6),
  onErrorContainer: Color(0xFF000000),
  surface: Color(0xFFFCFCFC),
  onSurface: Color(0xFF111111),
  surfaceDim: Color(0xFFE0E0E0),
  surfaceBright: Color(0xFFFDFDFD),
  surfaceContainerLowest: Color(0xFFFFFFFF),
  surfaceContainerLow: Color(0xFFF8F8F8),
  surfaceContainer: Color(0xFFF3F3F3),
  surfaceContainerHigh: Color(0xFFEDEDED),
  surfaceContainerHighest: Color(0xFFE7E7E7),
  onSurfaceVariant: Color(0xFF393939),
  outline: Color(0xFF919191),
  outlineVariant: Color(0xFFD1D1D1),
  shadow: Color(0xFF000000),
  scrim: Color(0xFF000000),
  inverseSurface: Color(0xFF2A2A2A),
  onInverseSurface: Color(0xFFF1F1F1),
  inversePrimary: Color(0xFFCCD88C),
  surfaceTint: Color(0xFF556500),
);

const ColorScheme darkColorSchemeIndigoSanMarino = ColorScheme(
  brightness: Brightness.dark,
  primary: Color(0xFFBAC3FF),
  onPrimary: Color(0xFF000000),
  primaryContainer: Color(0xFF293CA0),
  onPrimaryContainer: Color(0xFFFFFFFF),
  primaryFixed: Color(0xFFD6DAF0),
  primaryFixedDim: Color(0xFFACB3E1),
  onPrimaryFixed: Color(0xFF1D2450),
  onPrimaryFixedVariant: Color(0xFF222B5D),
  secondary: Color(0xFFAEC6FF),
  onSecondary: Color(0xFF000000),
  secondaryContainer: Color(0xFF14448D),
  onSecondaryContainer: Color(0xFFFFFFFF),
  secondaryFixed: Color(0xFFD2DDF0),
  secondaryFixedDim: Color(0xFFA9BCDF),
  onSecondaryFixed: Color(0xFF192947),
  onSecondaryFixedVariant: Color(0xFF1D3055),
  tertiary: Color(0xFFA9CDCF),
  onTertiary: Color(0xFF000000),
  tertiaryContainer: Color(0xFF2A4C4E),
  onTertiaryContainer: Color(0xFFFFFFFF),
  tertiaryFixed: Color(0xFFD8E2E3),
  tertiaryFixedDim: Color(0xFFB6C6C7),
  onTertiaryFixed: Color(0xFF1E2B2B),
  onTertiaryFixedVariant: Color(0xFF263536),
  error: Color(0xFFFFB4AB),
  onError: Color(0xFF000000),
  errorContainer: Color(0xFF93000A),
  onErrorContainer: Color(0xFFFFFFFF),
  surface: Color(0xFF080808),
  onSurface: Color(0xFFF1F1F1),
  surfaceDim: Color(0xFF060606),
  surfaceBright: Color(0xFF2C2C2C),
  surfaceContainerLowest: Color(0xFF010101),
  surfaceContainerLow: Color(0xFF0E0E0E),
  surfaceContainer: Color(0xFF151515),
  surfaceContainerHigh: Color(0xFF1D1D1D),
  surfaceContainerHighest: Color(0xFF282828),
  onSurfaceVariant: Color(0xFFCACACA),
  outline: Color(0xFF777777),
  outlineVariant: Color(0xFF414141),
  shadow: Color(0xFF000000),
  scrim: Color(0xFF000000),
  inverseSurface: Color(0xFFE8E8E8),
  onInverseSurface: Color(0xFF2A2A2A),
  inversePrimary: Color(0xFF54586B),
  surfaceTint: Color(0xFFBAC3FF),
);
const ColorScheme darkColorSchemeVerdunGreen = ColorScheme(
  brightness: Brightness.dark,
  primary: Color(0xFFBCD063),
  onPrimary: Color(0xFF000000),
  primaryContainer: Color(0xFF3F4C00),
  onPrimaryContainer: Color(0xFFFFFFFF),
  primaryFixed: Color(0xFFE1E7BF),
  primaryFixedDim: Color(0xFFC5D18C),
  onPrimaryFixed: Color(0xFF020300),
  onPrimaryFixedVariant: Color(0xFF485603),
  secondary: Color(0xFFFFE17B),
  onSecondary: Color(0xFF000000),
  secondaryContainer: Color(0xFF3B2F00),
  onSecondaryContainer: Color(0xFFFFFFFF),
  secondaryFixed: Color(0xFFECE5C8),
  secondaryFixedDim: Color(0xFFD8CB99),
  onSecondaryFixed: Color(0xFF292207),
  onSecondaryFixedVariant: Color(0xFF372E0A),
  tertiary: Color(0xFF78D3EC),
  onTertiary: Color(0xFF000000),
  tertiaryContainer: Color(0xFF224E43),
  onTertiaryContainer: Color(0xFFFFFFFF),
  tertiaryFixed: Color(0xFFBFE5EC),
  tertiaryFixedDim: Color(0xFF8CCCD8),
  onTertiaryFixed: Color(0xFF000F12),
  onTertiaryFixedVariant: Color(0xFF001F24),
  error: Color(0xFFFFB4AB),
  onError: Color(0xFF000000),
  errorContainer: Color(0xFF93000A),
  onErrorContainer: Color(0xFFFFFFFF),
  surface: Color(0xFF080808),
  onSurface: Color(0xFFF1F1F1),
  surfaceDim: Color(0xFF060606),
  surfaceBright: Color(0xFF2C2C2C),
  surfaceContainerLowest: Color(0xFF010101),
  surfaceContainerLow: Color(0xFF0E0E0E),
  surfaceContainer: Color(0xFF151515),
  surfaceContainerHigh: Color(0xFF1D1D1D),
  surfaceContainerHighest: Color(0xFF282828),
  onSurfaceVariant: Color(0xFFCACACA),
  outline: Color(0xFF777777),
  outlineVariant: Color(0xFF414141),
  shadow: Color(0xFF000000),
  scrim: Color(0xFF000000),
  inverseSurface: Color(0xFFE8E8E8),
  onInverseSurface: Color(0xFF2A2A2A),
  inversePrimary: Color(0xFF555D32),
  surfaceTint: Color(0xFFBCD063),
);
